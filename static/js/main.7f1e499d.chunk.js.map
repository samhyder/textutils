{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","Navbar","props","to","title","type","id","TextForm","wordCount","text","split","filter","item","length","useState","setText","heading","value","onChange","event","target","rows","onClick","newText","toUpperCase","toLowerCase","selectText","document","getElementById","select","navigator","clipboard","writeText","join","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iNAgBeA,MAdf,WACI,OACI,mCACI,sBAAKC,UAAU,YAAf,UACI,uCACA,mIACA,kNACA,gK,OCND,SAASC,EAAOC,GAC3B,OACI,8BACI,qBAAKF,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,eAAeG,GAAG,aAAlC,SAAgDD,EAAME,QACtD,wBAAQJ,UAAU,iBAAiBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAML,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BM,GAAG,yBAA7C,SACI,qBAAIN,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOG,GAAG,aAAzD,oBAEJ,oBAAIH,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWG,GAAG,SAA9B,iC,WCfjB,SAASI,EAASL,GAC7B,IAkCMM,EAAY,WACd,OAAOC,EAAKC,MAAM,KAAKC,QAAO,SAACC,GAAW,OAAuB,IAAhBA,EAAKC,UAAgBA,QAG1E,EAAwBC,mBAAS,IAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,OACI,qCACI,sBAAKf,UAAU,YAAf,UACI,6BAAKE,EAAMc,UACX,qBAAKhB,UAAU,OAAf,SAEI,0BAAUA,UAAU,eAAeiB,MAAOR,EAAMS,SAxCzC,SAACC,GACpBJ,EAAQI,EAAMC,OAAOH,QAuCiEX,GAAG,QAAQe,KAAK,QAE9F,wBAAQrB,UAAU,6BAA6BsB,QA/CrC,WAClB,IAAIC,EAAUd,EAAKe,cACnBT,EAAQQ,IA6CA,kCACA,wBAAQvB,UAAU,4BAA4BsB,QAvCnC,WACnB,IAAIC,EAAUd,EAAKgB,cACnBV,EACIQ,IAoCI,kCACA,wBAAQvB,UAAU,4BAA4BsB,QAtBjC,WAErBP,EADe,KAqBP,wBACA,wBAAQf,UAAU,4BAA4BsB,QAnClC,WAEpB,IAAII,EAAaC,SAASC,eAAe,SACzCF,EAAWG,SACXC,UAAUC,UAAUC,UAAUN,EAAWT,QA+BjC,uBACA,wBAAQjB,UAAU,4BAA4BsB,QA7B3B,WAC3B,IAAIC,EAAUd,EAAKC,MAAM,QACzBK,EAAQQ,EAAQU,KAAK,OA2Bb,mCAEJ,sBAAKjC,UAAU,iBAAf,UACI,mDACA,8BAAIQ,IAAJ,WAAyBC,EAAKI,OAA9B,iBACA,8BAAI,KAAQL,IAAZ,mBACA,yCACA,4BAAIC,U,WCjCLyB,MAnBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAACjC,EAAD,CAAQG,MAAM,gBAEd,qBAAKJ,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,aAAaC,QAAS,cAAC9B,EAAD,CAAUS,QAAQ,qCAE1D,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,SAASC,QAAS,cAAC,EAAD,iBCRjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.7f1e499d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>About</h1>\r\n                <p>This basic app is to understand some basic react concepts like state, props and react router etc.,</p>\r\n                <p>You have a text area to type and some buttons which are associated to that text. Buttons give you the functionality to manipulate the text according to their specific functions </p>\r\n                <p>Additional information like the average time it takes to read and number of words the text area contains is also included</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/textutils\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/textutils\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(\r\n            newText\r\n        )\r\n    }\r\n    const handleCopyClick = () => {\r\n\r\n        let selectText = document.getElementById(\"myBox\");\r\n        selectText.select();\r\n        navigator.clipboard.writeText(selectText.value);\r\n    }\r\n\r\n    const handleExtraSpacesClick = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = (\"\");\r\n        setText(\r\n            newText\r\n        )\r\n    }\r\n\r\n    const wordCount = () => {\r\n        return text.split(\" \").filter((item) => { return item.length !== 0 }).length;\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"7\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1  my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>Convert to lowerCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpacesClick}>Remove extraSpaces</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h1>Your Text Summary</h1>\r\n                <p>{wordCount()} words, {text.length} characters</p>\r\n                <p>{0.008 * wordCount()} minutes read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar title=\"TextUtility\"\r\n        />\r\n        <div className=\"container my-3\">\r\n          <Routes>\r\n            <Route exact path=\"/textutils\" element={<TextForm heading=\"Enter the text here to Analyze\" />}>\r\n            </Route>\r\n            <Route exact path=\"/about\" element={<About />}></Route>\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}